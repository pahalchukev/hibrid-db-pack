cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

image: $DOCKER_REGISTRY_URL/vod/tools/php-7.4-phpunit:latest


.branch-policy: &branch-policy
  only:
    - dev
    - master
    - merge_request
    - schedules
    - /feature.*

stages:
  - building
  - testing
  - analyzing
  - deploying

deploy:satis:
  tags:
    - docker-dind
  stage: deploying
  only:
    refs:
      - tags
  script:
    - curl "$SATIS_URL" > /dev/null

building:composer:
  <<: *branch-policy
  allow_failure: false
  tags:
    - docker-dind
  stage: building
  artifacts:
    expire_in: 1 day
    paths:
      - vendor
      - composer.lock
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts

test:unit:
  <<: *branch-policy
  dependencies:
    - building:composer
  stage: testing
  artifacts:
    expire_in: 5 days
    paths:
      - .tmp
  tags:
    - docker-dind
  script:
    - vendor/bin/phpunit -v --colors=never --stderr --coverage-text --testdox
  after_script:
    - echo "uploading artifacts to storage"
    - curl "$CI_ARTIFACTS_STORAGE?branch=$CI_COMMIT_REF_NAME&project_id=$CI_PROJECT_ID&project=$CI_PROJECT_PATH&job=$CI_JOB_NAME&job_id=$CI_JOB_ID"

analyze:phpcpd:
  <<: *branch-policy
  stage: analyzing
  tags:
    - docker-dind
  script:
    - test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
    - php phpcpd.phar src/ --min-lines=50
  dependencies:
    - building:composer
    - test:unit
  cache:
    paths:
      - phpcpd.phar

analyze:phpstan:
  <<: *branch-policy
  tags:
    - docker-dind
  dependencies:
    - building:composer
  stage: analyzing
  script:
    - php -d memory_limit=-1 vendor/bin/phpstan analyze --debug

analyze:phpcs:
  <<: *branch-policy
  tags:
    - docker-dind
  dependencies:
    - building:composer
    - test:unit
  stage: analyzing
  script:
    - php -d memory_limit=-1 vendor/bin/phpcs
